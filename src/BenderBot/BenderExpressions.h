/*******************************************************************
    BenderExpressions.h
    Brett Martin
    7/9/2020
    
    This class initializes all of the bender expressions making them
    available in a single class
********************************************************************/

#ifndef BenderExpressions_h
#define BenderExpressions_h

#if (ARDUINO >= 100)
    #include "Arduino.h"
#else
    #include "Wprogram.h"
#endif


static const uint8_t PROGMEM ExpNeutral[][16] = {
    { B00000000,
    B00111111,
    B01111111,
    B01111111,
    B11111111,
    B11111111,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111111,
    B11111111,
    B01111111,
    B01111111,
    B00111111,
    B00000000 },
  { B00000000,
    B11111100,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B00111111,
    B00111111,
    B00111111,
    B00111111,
    B11111111,
    B11111111,
    B11111110,
    B11111110,
    B11111100,
    B00000000 },
  { B00000000,
    B00111111,
    B01111111,
    B01111111,
    B11111111,
    B11111111,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111111,
    B11111111,
    B01111111,
    B01111111,
    B00111111,
    B00000000 },
  { B00000000,
    B11111100,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B00111111,
    B00111111,
    B00111111,
    B00111111,
    B11111111,
    B11111111,
    B11111110,
    B11111110,
    B11111100,
    B00000000 }
};

static const uint8_t PROGMEM ExpSemiAngry[][16] = {
    { B00000000,
    B00111111,
    B01111111,
    B01111111,
    B11111111,
    B11111111,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111111,
    B11111111,
    B01111111,
    B01111111,
    B00111111,
    B00000000 },
  { B00000000,
    B11111100,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B00111111,
    B00111111,
    B00111111,
    B00111111,
    B11111111,
    B11111111,
    B11111110,
    B11111110,
    B11111100,
    B00000000 },
  { B00000000,
    B00111111,
    B01111111,
    B01111111,
    B11111111,
    B11111111,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111111,
    B11111111,
    B01111111,
    B01111111,
    B00111111,
    B00000000 },
  { B00000000,
    B11111100,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B00111111,
    B00111111,
    B00111111,
    B00111111,
    B11111111,
    B11111111,
    B11111110,
    B11111110,
    B11111100,
    B00000000 }
};

static const uint8_t PROGMEM ExpAngry[][16] = {
    { B00000000,
    B00111111,
    B01111111,
    B01111111,
    B11111111,
    B11111111,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111111,
    B11111111,
    B01111111,
    B01111111,
    B00111111,
    B00000000 },
  { B00000000,
    B11111100,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B00111111,
    B00111111,
    B00111111,
    B00111111,
    B11111111,
    B11111111,
    B11111110,
    B11111110,
    B11111100,
    B00000000 },
  { B00000000,
    B00111111,
    B01111111,
    B01111111,
    B11111111,
    B11111111,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111111,
    B11111111,
    B01111111,
    B01111111,
    B00111111,
    B00000000 },
  { B00000000,
    B11111100,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B00111111,
    B00111111,
    B00111111,
    B00111111,
    B11111111,
    B11111111,
    B11111110,
    B11111110,
    B11111100,
    B00000000 }
};

static const uint8_t PROGMEM ExpVeryAngry[][16] = {
    { B00000000,
    B00111111,
    B01111111,
    B01111111,
    B11111111,
    B11111111,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111111,
    B11111111,
    B01111111,
    B01111111,
    B00111111,
    B00000000 },
  { B00000000,
    B11111100,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B00111111,
    B00111111,
    B00111111,
    B00111111,
    B11111111,
    B11111111,
    B11111110,
    B11111110,
    B11111100,
    B00000000 },
  { B00000000,
    B00111111,
    B01111111,
    B01111111,
    B11111111,
    B11111111,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111111,
    B11111111,
    B01111111,
    B01111111,
    B00111111,
    B00000000 },
  { B00000000,
    B11111100,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B00111111,
    B00111111,
    B00111111,
    B00111111,
    B11111111,
    B11111111,
    B11111110,
    B11111110,
    B11111100,
    B00000000 }
};

static const uint8_t (*Expressions[])[16] = { 
    ExpNeutral,
    ExpSemiAngry,
    ExpAngry,
    ExpVeryAngry
}; 

enum ExpressionNames {
    Neutral, 
    SemiAngry, 
    Angry, 
    VeryAngry
};

#endif // BenderExpressions_h